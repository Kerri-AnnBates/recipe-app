{"ast":null,"code":"import axios from 'axios';\nimport { axiosWithAuth } from '../protected/axiosWithAuth';\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\nexport const POST_DATA_START = 'POST_DATA_START';\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\nexport const POST_DATA_FAIL = 'POST_DATA_FAIL';\nexport const REGISTER_USER_START = 'REGISTER_USER_START';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\nexport const LOGIN_USER_START = 'LOGIN_USER_START';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL'; // Register user\n\nexport const registerUser = userData => dispatch => {\n  dispatch({\n    type: REGISTER_USER_START\n  });\n  axios.post('http://localhost:5000/api/auth/register', userData).then(res => {\n    // console.log(res.data);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error\n    });\n  });\n}; // Log in user\n\nexport const loginUser = (creds, props) => dispatch => {\n  dispatch({\n    type: LOGIN_USER_START\n  }); // console.log('from actions', props);\n\n  axios.post('http://localhost:5000/api/auth/login', creds).then(res => {\n    console.log(res.data); // save token\n\n    localStorage.setItem('token', res.data.token);\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: res.data\n    });\n    console.log('token data:', res.data.token.payload); // props.history.push(`/user/${res.data.token.id}/recipes`);\n  }).catch(error => {\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error\n    });\n  });\n}; // Fetch recipes\n\nexport const fetchRecipes = () => dispatch => {\n  dispatch({\n    type: FETCH_DATA_START\n  });\n  axios.get('http://localhost:5000/api/recipes').then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    console.log(err);\n    dispatch({\n      type: FETCH_DATA_FAIL,\n      payload: err\n    });\n  });\n}; // fet recipes by user id\n\nexport const fetchUserRecipes = id => dispatch => {\n  dispatch({\n    type: FETCH_DATA_START\n  });\n  axiosWithAuth().get(`http://localhost:5000/api/users/${id}/recipes`).then(res => {\n    console.log(res);\n    dispatch({\n      type: FETCH_DATA_SUCCESS,\n      payload: res.data\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch({\n      type: FETCH_DATA_FAIL,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/app/src/actions/index.js"],"names":["axios","axiosWithAuth","FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAIL","POST_DATA_START","POST_DATA_SUCCESS","POST_DATA_FAIL","REGISTER_USER_START","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOGIN_USER_START","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","registerUser","userData","dispatch","type","post","then","res","payload","data","catch","error","loginUser","creds","props","console","log","localStorage","setItem","token","fetchRecipes","get","err","fetchUserRecipes","id"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { axiosWithAuth } from '../protected/axiosWithAuth';\n\nexport const FETCH_DATA_START = 'FETCH_DATA_START';\nexport const FETCH_DATA_SUCCESS = 'FETCH_DATA_SUCCESS';\nexport const FETCH_DATA_FAIL = 'FETCH_DATA_FAIL';\n\nexport const POST_DATA_START = 'POST_DATA_START';\nexport const POST_DATA_SUCCESS = 'POST_DATA_SUCCESS';\nexport const POST_DATA_FAIL = 'POST_DATA_FAIL';\n\nexport const REGISTER_USER_START = 'REGISTER_USER_START';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL';\n\nexport const LOGIN_USER_START = 'LOGIN_USER_START';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAIL = 'LOGIN_USER_FAIL';\n\n// Register user\nexport const registerUser = (userData) => dispatch => {\n   dispatch({ type: REGISTER_USER_START });\n\n   axios.post('http://localhost:5000/api/auth/register', userData)\n      .then(res => {\n         // console.log(res.data);\n         dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: res.data\n         });\n      })\n      .catch(error => {\n         dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error\n         });\n      })\n}\n\n// Log in user\nexport const loginUser = (creds, props) => (dispatch) => {\n   dispatch({ type: LOGIN_USER_START });\n   // console.log('from actions', props);\n   axios.post('http://localhost:5000/api/auth/login', creds)\n      .then(res => {\n         console.log(res.data);\n         \n         // save token\n         localStorage.setItem('token', res.data.token);\n\n         dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: res.data\n         });\n         console.log('token data:', res.data.token.payload);\n         // props.history.push(`/user/${res.data.token.id}/recipes`);\n      })\n      .catch(error => {\n         dispatch({\n            type: LOGIN_USER_FAIL,\n            payload: error\n         });\n      });\n}\n\n// Fetch recipes\nexport const fetchRecipes = () => dispatch => {\n   dispatch({ type: FETCH_DATA_START });\n\n   axios.get('http://localhost:5000/api/recipes')\n      .then(res => {\n         console.log(res.data);\n         dispatch({\n            type: FETCH_DATA_SUCCESS,\n            payload: res.data\n         });\n      })\n      .catch(err => {\n         console.log(err);\n         dispatch({\n            type: FETCH_DATA_FAIL,\n            payload: err\n         });\n      });\n}\n\n// fet recipes by user id\nexport const fetchUserRecipes = (id) => dispatch => {\n   dispatch({ type: FETCH_DATA_START });\n\n   axiosWithAuth().get(`http://localhost:5000/api/users/${id}/recipes`)\n      .then(res => {\n         console.log(res);\n\n         dispatch({\n            type: FETCH_DATA_SUCCESS,\n            payload: res.data\n         });\n\n      })\n      .catch(error => {\n         console.log(error);\n\n         dispatch({\n            type: FETCH_DATA_FAIL,\n            payload: error\n         });\n      })\n}"]},"metadata":{},"sourceType":"module"}