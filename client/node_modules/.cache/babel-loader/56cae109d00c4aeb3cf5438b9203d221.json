{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients, addIngredientsToRecipe } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n  const {\n    getIngredients,\n    ingredients,\n    isFetching,\n    addedRecipe,\n    addIngredientsToRecipe,\n    getIngredientsByRecipeId\n  } = props;\n  const [search, setSearch] = useState('');\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  useEffect(() => {\n    getIngredients();\n  }, []);\n  useEffect(() => {\n    setFilteredIngredients(ingredients);\n  }, [ingredients]);\n  useEffect(() => {\n    setFilteredIngredients(ingredients.filter(ingredient => {\n      return ingredient.name.toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n  }\n\n  function AddIngredientToRecipe(ingredient) {\n    const data = {\n      \"recipe_id\": addedRecipe,\n      \"ingredient_id\": ingredient.id\n    };\n    addIngredientsToRecipe(addedRecipe, data);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Add Ingredients\"), React.createElement(\"section\", {\n    className: \"ingredients-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ingredients-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ingredients\",\n    id: \"ingredient-search\",\n    placeholder: \"Search ingredient...\",\n    value: search,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), isFetching && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Loading ingredients...\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, !isFetching && filteredIngredients.map(ingredient => React.createElement(\"li\", {\n    key: ingredient.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, ingredient.name, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => AddIngredientToRecipe(ingredient),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Add\")))))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Included ingredients\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"list of ingredients\")), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save\")));\n} // export default AddIngredients;\n\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.ingredientsReducer.isFetching,\n    ingredients: state.ingredientsReducer.ingredients,\n    addedRecipe: state.recipesReducer.addedRecipe\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getIngredients,\n  addIngredientsToRecipe,\n  getIngredientsByRecipeId\n})(AddIngredients);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js"],"names":["React","useEffect","useState","connect","Button","getIngredients","addIngredientsToRecipe","AddIngredients","props","ingredients","isFetching","addedRecipe","getIngredientsByRecipeId","search","setSearch","filteredIngredients","setFilteredIngredients","filter","ingredient","name","toLowerCase","includes","handleChange","e","target","value","AddIngredientToRecipe","data","id","map","mapStateToProps","state","ingredientsReducer","recipesReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients, addIngredientsToRecipe } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n\n\tconst { getIngredients,\n\t\tingredients,\n\t\tisFetching,\n\t\taddedRecipe,\n\t\taddIngredientsToRecipe,\n\t\tgetIngredientsByRecipeId } = props;\n\tconst [search, setSearch] = useState('');\n\tconst [filteredIngredients, setFilteredIngredients] = useState([]);\n\n\n\tuseEffect(() => {\n\t\tgetIngredients();\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetFilteredIngredients(ingredients);\n\t}, [ingredients])\n\n\tuseEffect(() => {\n\t\tsetFilteredIngredients(\n\t\t\tingredients.filter((ingredient) => {\n\t\t\t\treturn ingredient.name.toLowerCase().includes(search.toLowerCase());\n\t\t\t})\n\t\t);\n\t}, [search])\n\n\tfunction handleChange(e) {\n\t\tsetSearch(e.target.value)\n\t}\n\n\tfunction AddIngredientToRecipe(ingredient) {\n\t\tconst data = {\n\t\t\t\"recipe_id\": addedRecipe,\n\t\t\t\"ingredient_id\": ingredient.id,\n\t\t}\n\t\taddIngredientsToRecipe(addedRecipe, data);\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Add Ingredients</h1>\n\t\t\t\t<section className=\"ingredients-list\">\n\t\t\t\t\t<div className=\"ingredients-block\">\n\t\t\t\t\t\t{/* search box to filter out ingredients */}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"ingredients\"\n\t\t\t\t\t\t\tid=\"ingredient-search\"\n\t\t\t\t\t\t\tplaceholder=\"Search ingredient...\"\n\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* List ingredients */}\n\t\t\t\t\t\t{isFetching && (<p>Loading ingredients...</p>)}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{!isFetching && filteredIngredients.map(ingredient => (\n\t\t\t\t\t\t\t\t<li key={ingredient.id}>{ingredient.name}<Button color=\"primary\" onClick={() => AddIngredientToRecipe(ingredient)}>Add</Button></li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Included ingredients</h2>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tlist of ingredients\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<Button>Save</Button>\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\n// export default AddIngredients;\nfunction mapStateToProps(state) {\n\treturn {\n\t\tisFetching: state.ingredientsReducer.isFetching,\n\t\tingredients: state.ingredientsReducer.ingredients,\n\t\taddedRecipe: state.recipesReducer.addedRecipe\n\t}\n}\n\nexport default connect(\n\tmapStateToProps, { getIngredients, addIngredientsToRecipe, getIngredientsByRecipeId }\n)(AddIngredients);\n"]},"metadata":{},"sourceType":"module"}