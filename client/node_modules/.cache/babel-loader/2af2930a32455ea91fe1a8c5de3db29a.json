{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/app/src/components/recipe/RecipeList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes, fetchUserProfile } from '../../actions';\nimport Header from '../header/Header';\n\nfunction RecipeList(props) {\n  const fetchUserRecipes = props.fetchUserRecipes,\n        currentUser = props.currentUser,\n        fetchUserProfile = props.fetchUserProfile,\n        profileFetched = props.profileFetched,\n        recipes = props.recipes; // const [recipes, setRecipes] = useState([]);\n  // Get user id from reducer state\n\n  console.log('user:', currentUser);\n  const userId = currentUser.id; // Fetch recipes on load\n\n  useEffect(() => {\n    console.log('fetched profile', profileFetched);\n\n    async function fetchTheProfile(thePromise) {\n      await fetchUserRecipes(userId);\n    }\n\n    fetchTheProfile(fetchUserProfile);\n  }, []);\n  console.log('recipes:', recipes);\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recipe-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Your Recipes\"), recipes.map(recipe => React.createElement(\"h3\", {\n    key: recipe.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, recipe.title)))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    currentUser: state.currentUser,\n    profileFetched: state.profileFetched\n  };\n} // export default RecipeList;\n\n\nexport default connect(mapStateToProps, {\n  fetchUserRecipes,\n  fetchUserProfile\n})(RecipeList);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/app/src/components/recipe/RecipeList.js"],"names":["React","useEffect","useState","connect","fetchUserRecipes","fetchUserProfile","Header","RecipeList","props","currentUser","profileFetched","recipes","console","log","userId","id","fetchTheProfile","thePromise","map","recipe","title","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,eAAnD;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,QACfJ,gBADe,GAC8DI,KAD9D,CACfJ,gBADe;AAAA,QACGK,WADH,GAC8DD,KAD9D,CACGC,WADH;AAAA,QACgBJ,gBADhB,GAC8DG,KAD9D,CACgBH,gBADhB;AAAA,QACkCK,cADlC,GAC8DF,KAD9D,CACkCE,cADlC;AAAA,QACkDC,OADlD,GAC8DH,KAD9D,CACkDG,OADlD,EAGvB;AAEA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,WAArB;AACA,QAAMK,MAAM,GAAGL,WAAW,CAACM,EAA3B,CAPuB,CASvB;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,cAA/B;;AACA,mBAAeM,eAAf,CAAgCC,UAAhC,EAA4C;AACxC,YAAMb,gBAAgB,CAACU,MAAD,CAAtB;AACH;;AAEDE,IAAAA,eAAe,CAACX,gBAAD,CAAf;AACH,GAPQ,EAON,EAPM,CAAT;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,OAAxB;AAEA,SACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKA,OAAO,CAACO,GAAR,CAAYC,MAAM,IACf;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACJ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBI,MAAM,CAACC,KAA5B,CADH,CAFL,CADJ,CAFJ,CADJ;AAaH;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHX,IAAAA,OAAO,EAAEW,KAAK,CAACX,OADZ;AAEHF,IAAAA,WAAW,EAAEa,KAAK,CAACb,WAFhB;AAGHC,IAAAA,cAAc,EAAEY,KAAK,CAACZ;AAHnB,GAAP;AAKH,C,CAED;;;AACA,eAAeP,OAAO,CAClBkB,eADkB,EACD;AAAEjB,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CADC,CAAP,CAEbE,UAFa,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes, fetchUserProfile } from '../../actions';\n\nimport Header from '../header/Header';\n\nfunction RecipeList(props) {\n    const { fetchUserRecipes, currentUser, fetchUserProfile, profileFetched, recipes } = props;\n\n    // const [recipes, setRecipes] = useState([]);\n\n    // Get user id from reducer state\n    console.log('user:', currentUser);\n    const userId = currentUser.id;\n\n    // Fetch recipes on load\n    useEffect(() => {\n        console.log('fetched profile', profileFetched);\n        async function fetchTheProfile (thePromise) {\n            await fetchUserRecipes(userId);\n        }\n        \n        fetchTheProfile(fetchUserProfile);\n    }, []);\n\n    console.log('recipes:', recipes);\n\n    return (\n        <>\n            <Header />\n            <div className=\"recipe-list\">\n                <div className=\"container\">\n                    <h1>Your Recipes</h1>\n                    {recipes.map(recipe => (\n                        <h3 key={recipe.id}>{recipe.title}</h3>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        recipes: state.recipes,\n        currentUser: state.currentUser,\n        profileFetched: state.profileFetched\n    }\n}\n\n// export default RecipeList;\nexport default connect(\n    mapStateToProps, { fetchUserRecipes, fetchUserProfile }\n)(RecipeList);"]},"metadata":{},"sourceType":"module"}