{"ast":null,"code":"import { FETCH_DATA_START, FETCH_DATA_SUCCESS, FETCH_DATA_FAIL, POST_DATA_START, POST_DATA_SUCCESS, POST_DATA_FAIL } from '../actions';\nconst initialState = {\n  isFetching: false,\n  isLoggingIn: false,\n  loggedIn: false,\n  error: null,\n  recipes: []\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case 'FETCH_DATA_START':\n      return {\n        isFetching: true,\n        isLoggingIn: false,\n        loggedIn: false,\n        error: null,\n        recipes: []\n      };\n\n    case 'FETCH_DATA_SUCCESS':\n      return {\n        isFetching: false,\n        isLoggingIn: false,\n        loggedIn: false,\n        error: null,\n        recipes: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/app/src/reducer/index.js"],"names":["FETCH_DATA_START","FETCH_DATA_SUCCESS","FETCH_DATA_FAIL","POST_DATA_START","POST_DATA_SUCCESS","POST_DATA_FAIL","initialState","isFetching","isLoggingIn","loggedIn","error","recipes","reducer","state","action","type","payload"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,kBAA3B,EAA+CC,eAA/C,EAAgEC,eAAhE,EAAiFC,iBAAjF,EAAoGC,cAApG,QAA0H,YAA1H;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,UAAU,EAAE,KADM;AAElBC,EAAAA,WAAW,EAAE,KAFK;AAGlBC,EAAAA,QAAQ,EAAE,KAHQ;AAIlBC,EAAAA,KAAK,EAAE,IAJW;AAKlBC,EAAAA,OAAO,EAAE;AALS,CAArB;;AAQA,SAASC,OAAT,CAAiBC,KAAK,GAAGP,YAAzB,EAAuCQ,MAAvC,EAA+C;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACG,SAAK,kBAAL;AACG,aAAO;AACJR,QAAAA,UAAU,EAAE,IADR;AAEJC,QAAAA,WAAW,EAAE,KAFT;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,KAAK,EAAE,IAJH;AAKJC,QAAAA,OAAO,EAAE;AALL,OAAP;;AAOH,SAAK,oBAAL;AACG,aAAO;AACJJ,QAAAA,UAAU,EAAE,KADR;AAEJC,QAAAA,WAAW,EAAE,KAFT;AAGJC,QAAAA,QAAQ,EAAE,KAHN;AAIJC,QAAAA,KAAK,EAAE,IAJH;AAKJC,QAAAA,OAAO,EAAEG,MAAM,CAACE;AALZ,OAAP;;AAOH;AACG,aAAOH,KAAP;AAlBN;AAoBF;;AAED,eAAeD,OAAf","sourcesContent":["import { FETCH_DATA_START, FETCH_DATA_SUCCESS, FETCH_DATA_FAIL, POST_DATA_START, POST_DATA_SUCCESS, POST_DATA_FAIL } from '../actions';\n\nconst initialState = {\n   isFetching: false,\n   isLoggingIn: false,\n   loggedIn: false,\n   error: null,\n   recipes: []\n}\n\nfunction reducer(state = initialState, action) {\n   switch(action.type) {\n      case 'FETCH_DATA_START':\n         return {\n            isFetching: true,\n            isLoggingIn: false,\n            loggedIn: false,\n            error: null,\n            recipes: []\n         }\n      case 'FETCH_DATA_SUCCESS':\n         return {\n            isFetching: false,\n            isLoggingIn: false,\n            loggedIn: false,\n            error: null,\n            recipes: action.payload\n         }\n      default: \n         return state;\n   }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}