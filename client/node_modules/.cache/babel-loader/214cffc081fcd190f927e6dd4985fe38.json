{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_USER_START, LOGIN_USER_SUCCESS, LOGIN_USER_FAIL, REGISTER_USER_START, REGISTER_USER_SUCCESS, REGISTER_USER_FAIL } from './types'; // Log in user\n\nexport const loginUser = creds => dispatch => {\n  dispatch({\n    type: LOGIN_USER_START\n  });\n  axios.post('http://localhost:5000/api/auth/login', creds).then(res => {\n    console.log(res.data); // save token\n\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('user', JSON.stringify(res.data.userInfo));\n    dispatch({\n      type: LOGIN_USER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: LOGIN_USER_FAIL,\n      payload: error\n    });\n  });\n}; // Register user\n\nexport const registerUser = userData => dispatch => {\n  dispatch({\n    type: REGISTER_USER_START\n  });\n  axios.post('http://localhost:5000/api/auth/register', userData).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: res.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/redux/actions/user-action.js"],"names":["axios","LOGIN_USER_START","LOGIN_USER_SUCCESS","LOGIN_USER_FAIL","REGISTER_USER_START","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","loginUser","creds","dispatch","type","post","then","res","console","log","data","localStorage","setItem","token","JSON","stringify","userInfo","payload","catch","error","registerUser","userData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACGC,gBADH,EAEGC,kBAFH,EAGGC,eAHH,EAIGC,mBAJH,EAKGC,qBALH,EAMGC,kBANH,QAOO,SAPP,C,CASA;;AACA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAYC,QAAD,IAAc;AAC/CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AAEAD,EAAAA,KAAK,CAACW,IAAN,CAAW,sCAAX,EAAmDH,KAAnD,EACII,IADJ,CACSC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADU,CAGV;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACG,IAAJ,CAASG,KAAvC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BE,IAAI,CAACC,SAAL,CAAeR,GAAG,CAACG,IAAJ,CAASM,QAAxB,CAA7B;AAEAb,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAER,kBADA;AAENqB,MAAAA,OAAO,EAAEV,GAAG,CAACG;AAFP,KAAD,CAAR;AAIF,GAZJ,EAaIQ,KAbJ,CAaUC,KAAK,IAAI;AACbhB,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEP,eADA;AAENoB,MAAAA,OAAO,EAAEE;AAFH,KAAD,CAAR;AAIF,GAlBJ;AAmBF,CAtBM,C,CAwBP;;AACA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAclB,QAAQ,IAAI;AACnDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEAJ,EAAAA,KAAK,CAACW,IAAN,CAAW,yCAAX,EAAsDgB,QAAtD,EACIf,IADJ,CACSC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAP,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEL,qBADA;AAENkB,MAAAA,OAAO,EAAEV,GAAG,CAACG;AAFP,KAAD,CAAR;AAIF,GAPJ,EAQIQ,KARJ,CAQUC,KAAK,IAAI;AACbhB,IAAAA,QAAQ,CAAC;AACNC,MAAAA,IAAI,EAAEJ,kBADA;AAENiB,MAAAA,OAAO,EAAEE;AAFH,KAAD,CAAR;AAIF,GAbJ;AAcF,CAjBM","sourcesContent":["import axios from 'axios';\n\nimport {\n   LOGIN_USER_START,\n   LOGIN_USER_SUCCESS,\n   LOGIN_USER_FAIL,\n   REGISTER_USER_START,\n   REGISTER_USER_SUCCESS,\n   REGISTER_USER_FAIL\n} from './types';\n\n// Log in user\nexport const loginUser = (creds) => (dispatch) => {\n   dispatch({ type: LOGIN_USER_START });\n\n   axios.post('http://localhost:5000/api/auth/login', creds)\n      .then(res => {\n         console.log(res.data);\n\n         // save token\n         localStorage.setItem('token', res.data.token);\n         localStorage.setItem('user', JSON.stringify(res.data.userInfo));\n\n         dispatch({\n            type: LOGIN_USER_SUCCESS,\n            payload: res.data\n         });\n      })\n      .catch(error => {\n         dispatch({\n            type: LOGIN_USER_FAIL,\n            payload: error\n         });\n      });\n}\n\n// Register user\nexport const registerUser = (userData) => dispatch => {\n   dispatch({ type: REGISTER_USER_START });\n\n   axios.post('http://localhost:5000/api/auth/register', userData)\n      .then(res => {\n         console.log(res.data);\n         dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: res.data\n         });\n      })\n      .catch(error => {\n         dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error\n         });\n      })\n}"]},"metadata":{},"sourceType":"module"}