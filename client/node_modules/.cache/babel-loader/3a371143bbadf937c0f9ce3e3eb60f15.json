{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRecipeDetails } from '../../redux/actions/recipe-actions';\n\nfunction RecipeDetails(props) {\n  const {\n    fetchRecipeDetails,\n    recipeDetails,\n    isFetching\n  } = props;\n  const id = props.match.params.id;\n  const [recipe, setRecipe] = useState(null);\n  useEffect(() => {\n    fetchRecipeDetails(id);\n  }, []);\n\n  if (recipeDetails !== null) {\n    setRecipe(recipeDetails);\n    console.log(recipeDetails.title);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, isFetching && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Loading recipe...\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Title\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Description\")));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipeDetails: state.recipesReducer.recipeDetails,\n    isFetching: state.recipesReducer.isFetching\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchRecipeDetails\n})(RecipeDetails);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeDetails.js"],"names":["React","useEffect","useState","connect","fetchRecipeDetails","RecipeDetails","props","recipeDetails","isFetching","id","match","params","recipe","setRecipe","console","log","title","mapStateToProps","state","recipesReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,oCAAnC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE7B,QAAM;AAAEF,IAAAA,kBAAF;AAAsBG,IAAAA,aAAtB;AAAqCC,IAAAA;AAArC,MAAoDF,KAA1D;AACA,QAAMG,EAAE,GAAGH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,kBAAkB,CAACK,EAAD,CAAlB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAGF,aAAa,KAAK,IAArB,EAA2B;AAC1BM,IAAAA,SAAS,CAACN,aAAD,CAAT;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,aAAa,CAACS,KAA1B;AACA;;AAED,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,UAAU,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADjB,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHD,CADD,CADD;AASA;;AAED,SAASS,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,SAAO;AACNX,IAAAA,aAAa,EAAEW,KAAK,CAACC,cAAN,CAAqBZ,aAD9B;AAENC,IAAAA,UAAU,EAAEU,KAAK,CAACC,cAAN,CAAqBX;AAF3B,GAAP;AAIA;;AAED,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAiDC,aAAjD,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRecipeDetails } from '../../redux/actions/recipe-actions';\n\nfunction RecipeDetails(props) {\n\t\n\tconst { fetchRecipeDetails, recipeDetails, isFetching } = props;\n\tconst id = props.match.params.id;\n\tconst [recipe, setRecipe] = useState(null);\n\n\tuseEffect(() => {\n\t\tfetchRecipeDetails(id);\n\t}, [])\n\t\n\tif(recipeDetails !== null) {\n\t\tsetRecipe(recipeDetails);\n\t\tconsole.log(recipeDetails.title);\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t{isFetching && (<p>Loading recipe...</p>)}\n\t\t\t\t<h1>Title</h1>\n\t\t\t\t<p>Description</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\trecipeDetails: state.recipesReducer.recipeDetails,\n\t\tisFetching: state.recipesReducer.isFetching\n\t}\n}\n\nexport default connect(mapStateToProps, { fetchRecipeDetails })(RecipeDetails);"]},"metadata":{},"sourceType":"module"}