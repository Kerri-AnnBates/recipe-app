{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes, fetchUserProfile } from '../../actions';\nimport Header from '../header/Header';\n\nfunction RecipeList(props) {\n  const fetchUserRecipes = props.fetchUserRecipes,\n        currentUser = props.currentUser,\n        recipes = props.recipes; // Get user id from reducer state\n  // console.log('user:', currentUser);\n  // const [user, setUser] = useState(currentUser);\n  // console.log('user:', user);\n\n  const userId = currentUser.id;\n\n  async function getProfile() {\n    // Wait for profile to be fetched.\n    return await fetchUserProfile(userId);\n  } // Fetch recipes on load\n\n\n  useEffect(() => {\n    // Then get recipes after user info has been fetched.\n    getProfile().then(fetchUserRecipes(userId));\n  }, []); // console.log('recipes:', recipes);\n\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"recipe-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Your Recipes\"), recipes.length === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"You have no recipes yet...\") : recipes.map(recipe => React.createElement(\"h3\", {\n    key: recipe.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, recipe.title)))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    currentUser: state.currentUser,\n    profileFetched: state.profileFetched\n  };\n} // export default RecipeList;\n\n\nexport default connect(mapStateToProps, {\n  fetchUserRecipes,\n  fetchUserProfile\n})(RecipeList);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeList.js"],"names":["React","useEffect","useState","connect","fetchUserRecipes","fetchUserProfile","Header","RecipeList","props","currentUser","recipes","userId","id","getProfile","then","length","map","recipe","title","mapStateToProps","state","profileFetched"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,eAAnD;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,QACfJ,gBADe,GAC4BI,KAD5B,CACfJ,gBADe;AAAA,QACGK,WADH,GAC4BD,KAD5B,CACGC,WADH;AAAA,QACgBC,OADhB,GAC4BF,KAD5B,CACgBE,OADhB,EAGvB;AACA;AACA;AACA;;AACA,QAAMC,MAAM,GAAGF,WAAW,CAACG,EAA3B;;AAEA,iBAAeC,UAAf,GAA4B;AACxB;AACA,WAAO,MAAMR,gBAAgB,CAACM,MAAD,CAA7B;AACH,GAZsB,CAcvB;;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,UAAU,GAAGC,IAAb,CACIV,gBAAgB,CAACO,MAAD,CADpB;AAIH,GANQ,EAMN,EANM,CAAT,CAfuB,CAuBvB;;AAEA,SACI,0CACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKD,OAAO,CAACK,MAAR,KAAmB,CAAnB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAvB,GACDL,OAAO,CAACM,GAAR,CAAYC,MAAM,IACd;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBK,MAAM,CAACC,KAA5B,CADJ,CAHJ,CADJ,CAFJ,CADJ;AAcH;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHV,IAAAA,OAAO,EAAEU,KAAK,CAACV,OADZ;AAEHD,IAAAA,WAAW,EAAEW,KAAK,CAACX,WAFhB;AAGHY,IAAAA,cAAc,EAAED,KAAK,CAACC;AAHnB,GAAP;AAKH,C,CAED;;;AACA,eAAelB,OAAO,CAClBgB,eADkB,EACD;AAAEf,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CADC,CAAP,CAEbE,UAFa,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes, fetchUserProfile } from '../../actions';\n\nimport Header from '../header/Header';\n\nfunction RecipeList(props) {\n    const { fetchUserRecipes, currentUser, recipes } = props;\n\n    // Get user id from reducer state\n    // console.log('user:', currentUser);\n    // const [user, setUser] = useState(currentUser);\n    // console.log('user:', user);\n    const userId = currentUser.id;\n\n    async function getProfile() {\n        // Wait for profile to be fetched.\n        return await fetchUserProfile(userId);\n    }\n\n    // Fetch recipes on load\n    useEffect(() => {\n        // Then get recipes after user info has been fetched.\n        getProfile().then(\n            fetchUserRecipes(userId)\n        )\n        \n    }, []);\n\n    // console.log('recipes:', recipes);\n\n    return (\n        <>\n            <Header />\n            <div className=\"recipe-list\">\n                <div className=\"container\">\n                    <h1>Your Recipes</h1>\n                    {recipes.length === 0 ? <p>You have no recipes yet...</p> :\n                    recipes.map(recipe => (\n                        <h3 key={recipe.id}>{recipe.title}</h3>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n\nfunction mapStateToProps(state) {\n    return {\n        recipes: state.recipes,\n        currentUser: state.currentUser,\n        profileFetched: state.profileFetched\n    }\n}\n\n// export default RecipeList;\nexport default connect(\n    mapStateToProps, { fetchUserRecipes, fetchUserProfile }\n)(RecipeList);"]},"metadata":{},"sourceType":"module"}