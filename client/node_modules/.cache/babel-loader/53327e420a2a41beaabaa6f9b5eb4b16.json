{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n  const {\n    getIngredients,\n    ingredients,\n    isFetching\n  } = props;\n  const [search, setSearch] = useState('');\n  const [localIngredients, setLocalIngredients] = useState([]);\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n  }\n\n  async function fetchIngredients() {\n    const results = await getIngredients();\n    setLocalIngredients(results);\n  }\n\n  useEffect(() => {\n    // getIngredients();\n    fetchIngredients();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Add Ingredient\"), React.createElement(\"section\", {\n    className: \"ingredients-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ingredients-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ingredients\",\n    id: \"ingredient-search\",\n    placeholder: \"Search ingredient...\",\n    value: search,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), isFetching && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Loading ingredients...\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !isFetching && ingredients.map(ingredient => React.createElement(\"li\", {\n    key: ingredient.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, ingredient.name, React.createElement(Button, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Add\")))))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Included ingredients\"))));\n} // export default AddIngredients;\n\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.ingredientsReducer.isFetching,\n    ingredients: state.ingredientsReducer.ingredients\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getIngredients\n})(AddIngredients);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js"],"names":["React","useEffect","useState","connect","Button","getIngredients","AddIngredients","props","ingredients","isFetching","search","setSearch","localIngredients","setLocalIngredients","handleChange","e","target","value","fetchIngredients","results","map","ingredient","id","name","mapStateToProps","state","ingredientsReducer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,cAAT,QAA+B,wCAA/B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE9B,QAAM;AAAEF,IAAAA,cAAF;AAAkBG,IAAAA,WAAlB;AAA+BC,IAAAA;AAA/B,MAA8CF,KAApD;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;;AAEA,WAASY,YAAT,CAAsBC,CAAtB,EAAyB;AACxBJ,IAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACA;;AAED,iBAAeC,gBAAf,GAAkC;AACjC,UAAMC,OAAO,GAAG,MAAMd,cAAc,EAApC;AACAQ,IAAAA,mBAAmB,CAACM,OAAD,CAAnB;AACA;;AAEDlB,EAAAA,SAAS,CAAC,MAAM;AACf;AACAiB,IAAAA,gBAAgB;AAChB,GAHQ,EAGN,EAHM,CAAT;AAMA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAEC;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,IAAI,EAAC,aAFN;AAGC,IAAA,EAAE,EAAC,mBAHJ;AAIC,IAAA,WAAW,EAAC,sBAJb;AAKC,IAAA,KAAK,EAAER,MALR;AAMC,IAAA,QAAQ,EAAEI,YANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAYEL,UAAU,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZjB,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACA,UAAD,IAAeD,WAAW,CAACY,GAAZ,CAAgBC,UAAU,IACzC;AAAI,IAAA,GAAG,EAAEA,UAAU,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBD,UAAU,CAACE,IAApC,EAAyC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAzC,CADe,CADjB,CAbD,CADD,CAFD,EAuBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADD,CAvBD,CADD,CADD;AA+BA,C,CAED;;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,SAAO;AACNhB,IAAAA,UAAU,EAAEgB,KAAK,CAACC,kBAAN,CAAyBjB,UAD/B;AAEND,IAAAA,WAAW,EAAEiB,KAAK,CAACC,kBAAN,CAAyBlB;AAFhC,GAAP;AAIA;;AAED,eAAeL,OAAO,CACrBqB,eADqB,EACJ;AAAEnB,EAAAA;AAAF,CADI,CAAP,CAEbC,cAFa,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n\n\tconst { getIngredients, ingredients, isFetching } = props;\n\tconst [search, setSearch] = useState('');\n\tconst [localIngredients, setLocalIngredients] = useState([]);\n\n\tfunction handleChange(e) {\n\t\tsetSearch(e.target.value)\n\t}\n\n\tasync function fetchIngredients() {\n\t\tconst results = await getIngredients();\n\t\tsetLocalIngredients(results);\n\t}\n\n\tuseEffect(() => {\n\t\t// getIngredients();\n\t\tfetchIngredients()\n\t}, [])\n\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Add Ingredient</h1>\n\t\t\t\t<section className=\"ingredients-list\">\n\t\t\t\t\t<div className=\"ingredients-block\">\n\t\t\t\t\t\t{/* search box to filter out ingredients */}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"ingredients\"\n\t\t\t\t\t\t\tid=\"ingredient-search\"\n\t\t\t\t\t\t\tplaceholder=\"Search ingredient...\"\n\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* List ingredients */}\n\t\t\t\t\t\t{isFetching && (<p>Loading ingredients...</p>)}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{!isFetching && ingredients.map(ingredient => (\n\t\t\t\t\t\t\t\t<li key={ingredient.id}>{ingredient.name}<Button color=\"primary\">Add</Button></li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Included ingredients</h2>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\n// export default AddIngredients;\nfunction mapStateToProps(state) {\n\treturn {\n\t\tisFetching: state.ingredientsReducer.isFetching,\n\t\tingredients: state.ingredientsReducer.ingredients\n\t}\n}\n\nexport default connect(\n\tmapStateToProps, { getIngredients }\n)(AddIngredients);\n"]},"metadata":{},"sourceType":"module"}