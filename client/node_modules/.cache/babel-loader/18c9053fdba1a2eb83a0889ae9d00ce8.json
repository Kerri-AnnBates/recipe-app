{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients, addIngredientsToRecipe, getIngredientsByRecipeId } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n  const {\n    getIngredients,\n    ingredients,\n    isFetching,\n    addedRecipe,\n    addIngredientsToRecipe,\n    getIngredientsByRecipeId,\n    added,\n    addedIngredients\n  } = props;\n  const [search, setSearch] = useState('');\n  const [filteredIngredients, setFilteredIngredients] = useState([]);\n  useEffect(() => {\n    getIngredients();\n  }, []);\n  useEffect(() => {\n    setFilteredIngredients(ingredients);\n  }, [ingredients]);\n  useEffect(() => {\n    setFilteredIngredients(ingredients.filter(ingredient => {\n      return ingredient.name.toLowerCase().includes(search.toLowerCase());\n    }));\n  }, [search]);\n  useEffect(() => {\n    getIngredientsByRecipeId(addedRecipe);\n    console.log(\"Added ingredient\", addedIngredients);\n  }, [added]);\n\n  function handleChange(e) {\n    setSearch(e.target.value);\n  }\n\n  function AddIngredientToRecipe(ingredient) {\n    const data = {\n      \"recipe_id\": addedRecipe\n    };\n    addIngredientsToRecipe(ingredient.id, data);\n  } // Save and move on to steps\n\n\n  function goToSteps() {\n    props.history.push('/add-steps');\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Add Ingredients\"), React.createElement(\"section\", {\n    className: \"ingredients-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ingredients-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ingredients\",\n    id: \"ingredient-search\",\n    placeholder: \"Search ingredient...\",\n    value: search,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), isFetching && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Loading ingredients...\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, !isFetching && filteredIngredients.map(ingredient => React.createElement(\"li\", {\n    key: ingredient.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, ingredient.name, React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => AddIngredientToRecipe(ingredient),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Add\")))))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Included ingredients\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, addedIngredients.length > 0 ? React.createElement(\"div\", {\n    className: \"recipe-ingredients wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, addedIngredients.map(ingredient => React.createElement(\"div\", {\n    className: \"ingredient-item\",\n    key: ingredient.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, ingredient.name, \" \", React.createElement(Button, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Remove\")))) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"No ingredients added yet.\"))), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Save\")));\n} // export default AddIngredients;\n\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.ingredientsReducer.isFetching,\n    ingredients: state.ingredientsReducer.ingredients,\n    addedRecipe: state.recipesReducer.addedRecipe,\n    addedIngredients: state.ingredientsReducer.addedIngredients,\n    added: state.ingredientsReducer.added\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getIngredients,\n  addIngredientsToRecipe,\n  getIngredientsByRecipeId\n})(AddIngredients);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/AddIngredients.js"],"names":["React","useEffect","useState","connect","Button","getIngredients","addIngredientsToRecipe","getIngredientsByRecipeId","AddIngredients","props","ingredients","isFetching","addedRecipe","added","addedIngredients","search","setSearch","filteredIngredients","setFilteredIngredients","filter","ingredient","name","toLowerCase","includes","console","log","handleChange","e","target","value","AddIngredientToRecipe","data","id","goToSteps","history","push","map","length","mapStateToProps","state","ingredientsReducer","recipesReducer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'reactstrap';\nimport { getIngredients, addIngredientsToRecipe, getIngredientsByRecipeId } from '../../redux/actions/ingredient-actions';\n\nfunction AddIngredients(props) {\n\n\tconst { getIngredients,\n\t\tingredients,\n\t\tisFetching,\n\t\taddedRecipe,\n\t\taddIngredientsToRecipe,\n\t\tgetIngredientsByRecipeId,\n\t\tadded,\n\t\taddedIngredients\n\t} = props;\n\tconst [search, setSearch] = useState('');\n\tconst [filteredIngredients, setFilteredIngredients] = useState([]);\n\n\n\tuseEffect(() => {\n\t\tgetIngredients();\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetFilteredIngredients(ingredients);\n\t}, [ingredients])\n\n\tuseEffect(() => {\n\t\tsetFilteredIngredients(\n\t\t\tingredients.filter((ingredient) => {\n\t\t\t\treturn ingredient.name.toLowerCase().includes(search.toLowerCase());\n\t\t\t})\n\t\t);\n\t}, [search])\n\n\tuseEffect(() => {\n\t\tgetIngredientsByRecipeId(addedRecipe);\n\t\tconsole.log(\"Added ingredient\", addedIngredients);\n\t}, [added])\n\n\tfunction handleChange(e) {\n\t\tsetSearch(e.target.value)\n\t}\n\n\tfunction AddIngredientToRecipe(ingredient) {\n\t\tconst data = {\n\t\t\t\"recipe_id\": addedRecipe,\n\t\t}\n\t\taddIngredientsToRecipe(ingredient.id, data);\n\t}\n\n\t// Save and move on to steps\n\tfunction goToSteps() {\n\t\tprops.history.push('/add-steps');\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Add Ingredients</h1>\n\t\t\t\t<section className=\"ingredients-list\">\n\t\t\t\t\t<div className=\"ingredients-block\">\n\t\t\t\t\t\t{/* search box to filter out ingredients */}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"ingredients\"\n\t\t\t\t\t\t\tid=\"ingredient-search\"\n\t\t\t\t\t\t\tplaceholder=\"Search ingredient...\"\n\t\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{/* List ingredients */}\n\t\t\t\t\t\t{isFetching && (<p>Loading ingredients...</p>)}\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{!isFetching && filteredIngredients.map(ingredient => (\n\t\t\t\t\t\t\t\t<li key={ingredient.id}>{ingredient.name}<Button color=\"primary\" onClick={() => AddIngredientToRecipe(ingredient)}>Add</Button></li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<section>\n\t\t\t\t\t<h2>Included ingredients</h2>\n\t\t\t\t\t<div>\n\n\t\t\t\t\t\t{addedIngredients.length > 0 ?\n\t\t\t\t\t\t\t(<div className=\"recipe-ingredients wrapper\">\n\t\t\t\t\t\t\t\t{addedIngredients.map(ingredient => (\n\t\t\t\t\t\t\t\t\t<div className=\"ingredient-item\" key={ingredient.id}>{ingredient.name} <Button color=\"danger\">Remove</Button></div>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>) : (<p>No ingredients added yet.</p>)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<Button>Save</Button>\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\n// export default AddIngredients;\nfunction mapStateToProps(state) {\n\treturn {\n\t\tisFetching: state.ingredientsReducer.isFetching,\n\t\tingredients: state.ingredientsReducer.ingredients,\n\t\taddedRecipe: state.recipesReducer.addedRecipe,\n\t\taddedIngredients: state.ingredientsReducer.addedIngredients,\n\t\tadded: state.ingredientsReducer.added\n\t}\n}\n\nexport default connect(\n\tmapStateToProps, { getIngredients, addIngredientsToRecipe, getIngredientsByRecipeId }\n)(AddIngredients);\n"]},"metadata":{},"sourceType":"module"}