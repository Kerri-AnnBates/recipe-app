{"ast":null,"code":"import { FETCH_INGREDIENTS_START, FETCH_INGREDIENTS_SUCCESS, FETCH_INGREDIENTS_FAIL, ADD_INGREDIENT_TO_RECIPE_START, ADD_INGREDIENT_TO_RECIPE_SUCCESS, ADD_INGREDIENT_TO_RECIPE_FAIL, FETCH_ADDED_INGREDIENTS_START, FETCH_ADDED_INGREDIENTS_SUCCESS, FETCH_ADDED_INGREDIENTS_FAIL } from './types';\nimport axios from 'axios';\nexport const getIngredients = () => dispatch => {\n  dispatch({\n    type: FETCH_INGREDIENTS_START\n  });\n  axios.get('http://localhost:5000/api/ingredients').then(res => {\n    dispatch({\n      type: FETCH_INGREDIENTS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_INGREDIENTS_FAIL,\n      payload: err\n    });\n  });\n};\nexport const addIngredientsToRecipe = (id, body) => dispatch => {\n  dispatch({\n    type: ADD_INGREDIENT_TO_RECIPE_START\n  });\n  axios.post(`http://localhost:5000/api/ingredients/${id}`, body).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: ADD_INGREDIENT_TO_RECIPE_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: ADD_INGREDIENT_TO_RECIPE_FAIL,\n      payload: err\n    });\n  });\n};\nexport const getIngredientsByRecipeId = id => dispatch => {\n  dispatch({\n    type: FETCH_ADDED_INGREDIENTS_START\n  });\n  axios.get(`http://localhost:5000/api/recipes/${id}/ingredients`).then(res => {\n    console.log(res.data);\n    dispatch({\n      type: FETCH_ADDED_INGREDIENTS_SUCCESS,\n      payload: res.data\n    });\n  }).catch(err => {\n    dispatch({\n      type: FETCH_ADDED_INGREDIENTS_FAIL,\n      payload: err\n    });\n  });\n};","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/redux/actions/ingredient-actions.js"],"names":["FETCH_INGREDIENTS_START","FETCH_INGREDIENTS_SUCCESS","FETCH_INGREDIENTS_FAIL","ADD_INGREDIENT_TO_RECIPE_START","ADD_INGREDIENT_TO_RECIPE_SUCCESS","ADD_INGREDIENT_TO_RECIPE_FAIL","FETCH_ADDED_INGREDIENTS_START","FETCH_ADDED_INGREDIENTS_SUCCESS","FETCH_ADDED_INGREDIENTS_FAIL","axios","getIngredients","dispatch","type","get","then","res","payload","data","catch","err","addIngredientsToRecipe","id","body","post","console","log","getIngredientsByRecipeId"],"mappings":"AAAA,SACCA,uBADD,EAECC,yBAFD,EAGCC,sBAHD,EAICC,8BAJD,EAKCC,gCALD,EAMCC,6BAND,EAOCC,6BAPD,EAQCC,+BARD,EASCC,4BATD,QAUO,SAVP;AAWA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAC/CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AAEAS,EAAAA,KAAK,CAACI,GAAN,CAAU,uCAAV,EACEC,IADF,CACOC,GAAG,IAAI;AACZJ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEX,yBAAR;AAAmCe,MAAAA,OAAO,EAAED,GAAG,CAACE;AAAhD,KAAD,CAAR;AACA,GAHF,EAIEC,KAJF,CAIQC,GAAG,IAAI;AACbR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEV,sBAAR;AAAgCc,MAAAA,OAAO,EAAEG;AAAzC,KAAD,CAAR;AACA,GANF;AAOA,CAVM;AAYP,OAAO,MAAMC,sBAAsB,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAcX,QAAQ,IAAI;AAC/DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR;AAEAM,EAAAA,KAAK,CAACc,IAAN,CAAY,yCAAwCF,EAAG,EAAvD,EAA0DC,IAA1D,EACER,IADF,CACOC,GAAG,IAAI;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACE,IAAhB;AACAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,gCAAR;AAA0CY,MAAAA,OAAO,EAAED,GAAG,CAACE;AAAvD,KAAD,CAAR;AACA,GAJF,EAKEC,KALF,CAKQC,GAAG,IAAI;AACbR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,6BAAR;AAAuCW,MAAAA,OAAO,EAAEG;AAAhD,KAAD,CAAR;AACA,GAPF;AAQA,CAXM;AAaP,OAAO,MAAMO,wBAAwB,GAAIL,EAAD,IAAQV,QAAQ,IAAI;AAC3DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AAEAG,EAAAA,KAAK,CAACI,GAAN,CAAW,qCAAoCQ,EAAG,cAAlD,EACEP,IADF,CACOC,GAAG,IAAI;AACZS,IAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACE,IAAhB;AACAN,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,+BAAR;AAAyCS,MAAAA,OAAO,EAAED,GAAG,CAACE;AAAtD,KAAD,CAAR;AACA,GAJF,EAKEC,KALF,CAKQC,GAAG,IAAI;AACbR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,4BAAR;AAAsCQ,MAAAA,OAAO,EAAEG;AAA/C,KAAD,CAAR;AACA,GAPF;AAQA,CAXM","sourcesContent":["import {\n\tFETCH_INGREDIENTS_START,\n\tFETCH_INGREDIENTS_SUCCESS,\n\tFETCH_INGREDIENTS_FAIL,\n\tADD_INGREDIENT_TO_RECIPE_START,\n\tADD_INGREDIENT_TO_RECIPE_SUCCESS,\n\tADD_INGREDIENT_TO_RECIPE_FAIL,\n\tFETCH_ADDED_INGREDIENTS_START,\n\tFETCH_ADDED_INGREDIENTS_SUCCESS,\n\tFETCH_ADDED_INGREDIENTS_FAIL,\n} from './types';\nimport axios from 'axios';\n\nexport const getIngredients = () => dispatch => {\n\tdispatch({ type: FETCH_INGREDIENTS_START });\n\n\taxios.get('http://localhost:5000/api/ingredients')\n\t\t.then(res => {\n\t\t\tdispatch({ type: FETCH_INGREDIENTS_SUCCESS, payload: res.data })\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch({ type: FETCH_INGREDIENTS_FAIL, payload: err });\n\t\t})\n}\n\nexport const addIngredientsToRecipe = (id, body) => dispatch => {\n\tdispatch({ type: ADD_INGREDIENT_TO_RECIPE_START });\n\n\taxios.post(`http://localhost:5000/api/ingredients/${id}`, body)\n\t\t.then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\tdispatch({ type: ADD_INGREDIENT_TO_RECIPE_SUCCESS, payload: res.data });\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch({ type: ADD_INGREDIENT_TO_RECIPE_FAIL, payload: err })\n\t\t})\n}\n\nexport const getIngredientsByRecipeId = (id) => dispatch => {\n\tdispatch({ type: FETCH_ADDED_INGREDIENTS_START });\n\n\taxios.get(`http://localhost:5000/api/recipes/${id}/ingredients`)\n\t\t.then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\tdispatch({ type: FETCH_ADDED_INGREDIENTS_SUCCESS, payload: res.data });\n\t\t})\n\t\t.catch(err => {\n\t\t\tdispatch({ type: FETCH_ADDED_INGREDIENTS_FAIL, payload: err });\n\t\t})\n}"]},"metadata":{},"sourceType":"module"}