{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeList.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes } from '../../redux/actions/recipe-actions';\nimport { axiosWithAuth } from '../../protected/axiosWithAuth';\nimport { Button } from 'reactstrap'; // Components\n\nimport RecipeCard from './RecipeCard';\n\nfunction RecipeList(props) {\n  const {\n    fetchUserRecipes,\n    recipes,\n    loggedInUser\n  } = props;\n  console.log(\"Logged in user:\", loggedInUser);\n\n  async function getProfile() {\n    // Wait for profile to be fetched.\n    return await axiosWithAuth().get('http://localhost:5000/api/users/profile');\n  } // Fetch recipes on load\n\n\n  useEffect(() => {\n    // Then get recipes after user info has been fetched.\n    getProfile().then(res => fetchUserRecipes(res.data.id));\n  }, []); // redirect to add recipe page\n\n  function toAddRecipe() {\n    props.history.push('/add-recipe');\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"recipe-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Your Recipes\"), React.createElement(Button, {\n    color: \"success\",\n    onClick: toAddRecipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Add Recipe\"), React.createElement(\"div\", {\n    className: \"recipes-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, recipes.length === 0 ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"You have no recipes yet...\") : recipes.map(recipe => React.createElement(RecipeCard, {\n    key: recipe.id,\n    recipe: recipe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))))));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    loggedInUser: state.loggedInUser\n  };\n} // export default RecipeList;\n\n\nexport default connect(mapStateToProps, {\n  fetchUserRecipes\n})(RecipeList);","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/components/recipe/RecipeList.js"],"names":["React","useEffect","connect","fetchUserRecipes","axiosWithAuth","Button","RecipeCard","RecipeList","props","recipes","loggedInUser","console","log","getProfile","get","then","res","data","id","toAddRecipe","history","push","length","map","recipe","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,SAASC,MAAT,QAAuB,YAAvB,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,QAAM;AAAEL,IAAAA,gBAAF;AAAoBM,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAA8CF,KAApD;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,YAA/B;;AAEA,iBAAeG,UAAf,GAA4B;AAC3B;AACA,WAAO,MAAMT,aAAa,GAAGU,GAAhB,CAAoB,yCAApB,CAAb;AAEA,GATyB,CAW1B;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACf;AACAY,IAAAA,UAAU,GAAGE,IAAb,CAAkBC,GAAG,IAAIb,gBAAgB,CAACa,GAAG,CAACC,IAAJ,CAASC,EAAV,CAAzC;AACA,GAHQ,EAGN,EAHM,CAAT,CAZ0B,CAiB1B;;AACA,WAASC,WAAT,GAAuB;AACtBX,IAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,aAAnB;AACA;;AAED,SACC,0CACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEF,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,EAGC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEV,OAAO,CAACa,MAAR,KAAmB,CAAnB,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAvB,GACAb,OAAO,CAACc,GAAR,CAAYC,MAAM,IACjB,oBAAC,UAAD;AACC,IAAA,GAAG,EAAEA,MAAM,CAACN,EADb;AAEC,IAAA,MAAM,EAAEM,MAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFF,CAHD,CADD,CADD,CADD;AAmBA;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,SAAO;AACNjB,IAAAA,OAAO,EAAEiB,KAAK,CAACjB,OADT;AAENC,IAAAA,YAAY,EAAEgB,KAAK,CAAChB;AAFd,GAAP;AAIA,C,CAED;;;AACA,eAAeR,OAAO,CACrBuB,eADqB,EACJ;AAAEtB,EAAAA;AAAF,CADI,CAAP,CAEbI,UAFa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserRecipes } from '../../redux/actions/recipe-actions';\nimport { axiosWithAuth } from '../../protected/axiosWithAuth';\nimport { Button } from 'reactstrap';\n\n// Components\nimport RecipeCard from './RecipeCard';\n\nfunction RecipeList(props) {\n\tconst { fetchUserRecipes, recipes, loggedInUser } = props;\n\n\tconsole.log(\"Logged in user:\", loggedInUser);\n\n\tasync function getProfile() {\n\t\t// Wait for profile to be fetched.\n\t\treturn await axiosWithAuth().get('http://localhost:5000/api/users/profile');\n\n\t}\n\n\t// Fetch recipes on load\n\tuseEffect(() => {\n\t\t// Then get recipes after user info has been fetched.\n\t\tgetProfile().then(res => fetchUserRecipes(res.data.id));\n\t}, []);\n\n\t// redirect to add recipe page\n\tfunction toAddRecipe() {\n\t\tprops.history.push('/add-recipe');\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"recipe-list\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h1>Your Recipes</h1>\n\t\t\t\t\t<Button color=\"success\" onClick={toAddRecipe}>Add Recipe</Button>\n\t\t\t\t\t<div className=\"recipes-wrapper\">\n\t\t\t\t\t\t{recipes.length === 0 ? <p>You have no recipes yet...</p> :\n\t\t\t\t\t\t\trecipes.map(recipe => (\n\t\t\t\t\t\t\t\t<RecipeCard\n\t\t\t\t\t\t\t\t\tkey={recipe.id}\n\t\t\t\t\t\t\t\t\trecipe={recipe}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\trecipes: state.recipes,\n\t\tloggedInUser: state.loggedInUser\n\t}\n}\n\n// export default RecipeList;\nexport default connect(\n\tmapStateToProps, { fetchUserRecipes }\n)(RecipeList);"]},"metadata":{},"sourceType":"module"}