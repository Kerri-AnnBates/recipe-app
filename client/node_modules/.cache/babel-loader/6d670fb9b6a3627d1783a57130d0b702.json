{"ast":null,"code":"var _jsxFileName = \"/Users/kerri-annbates/Documents/projects/recipe-app/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './redux/reducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.scss';\nimport { loadData, saveData } from './localData/localData'; // Persist user data after log import \n// const persistedData = loadData();\n\nconst persistedData = { ...store.getState()\n}; // Create store\n\nconst store = createStore(reducer, persistedData, applyMiddleware(thunk, logger));\nconsole.log(store.getState()); // store.subscribe(() => {\n// \tsaveData({\n// \t\tuser: store.getState().loggedInUser\n// \t});\n// })\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/kerri-annbates/Documents/projects/recipe-app/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","BrowserRouter","Router","Provider","createStore","applyMiddleware","thunk","logger","reducer","loadData","saveData","persistedData","store","getState","console","log","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAO,sCAAP;AACA,OAAO,mBAAP;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,uBAAnC,C,CAEA;AACA;;AACA,MAAMC,aAAa,GAAG,EACrB,GAAGC,KAAK,CAACC,QAAN;AADkB,CAAtB,C,CAKA;;AACA,MAAMD,KAAK,GAAGR,WAAW,CAACI,OAAD,EAAUG,aAAV,EAAyBN,eAAe,CAACC,KAAD,EAAQC,MAAR,CAAxC,CAAzB;AACAO,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,EAAZ,E,CACA;AACA;AACA;AACA;AACA;;AAEAf,QAAQ,CAACkB,MAAT,CACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADD,EAKcK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALd,E,CAOA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport reducer from './redux/reducer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/app.scss';\nimport { loadData, saveData } from './localData/localData';\n\n// Persist user data after log import \n// const persistedData = loadData();\nconst persistedData = {\n\t...store.getState()\n}\n\n\n// Create store\nconst store = createStore(reducer, persistedData, applyMiddleware(thunk, logger));\nconsole.log(store.getState())\n// store.subscribe(() => {\n// \tsaveData({\n// \t\tuser: store.getState().loggedInUser\n// \t});\n// })\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<Router>\n\t\t\t<App />\n\t\t</Router>\n\t</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}